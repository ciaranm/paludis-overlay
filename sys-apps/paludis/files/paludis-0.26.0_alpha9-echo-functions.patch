diff --git a/paludis/util/echo_functions.bash.in b/paludis/util/echo_functions.bash.in
index 3a15a77..9af0cf0 100644
--- a/paludis/util/echo_functions.bash.in
+++ b/paludis/util/echo_functions.bash.in
@@ -49,8 +49,8 @@ paludis_ecmd()
 {
     local cmd="$1" hook="$2" prefix="$3" message="$4" newline="$5"
 
-    echo -n "${prefix}${message}"
-    [[ -z "${newline}" ]] && echo
+    echo -n "${prefix}${message}" >&2
+    [[ -z "${newline}" ]] && echo >&2
 
     if type perform_hook &>/dev/null ; then
         if [[ -n "${hook}" ]] ; then
@@ -150,7 +150,7 @@ _eend()
         msg="${COLOUR_BRACKET}[ ${COLOUR_BAD}!!${COLOUR_BRACKET} ]${COLOUR_NORMAL}"
     fi
 
-    echo -e "${PALUDIS_ENDCOL} ${msg}"
+    echo -e "${PALUDIS_ENDCOL} ${msg}" >&2
 
     return ${retval}
 }
diff --git a/hooks/news_TEST b/hooks/news_TEST
index 08d5a07..4b77cf8 100755
--- a/hooks/news_TEST
+++ b/hooks/news_TEST
@@ -23,8 +23,8 @@ news_none_TEST()
     export HOOK=sync_all_post
     export PALUDIS_HOME=`pwd`/news_TEST_dir/one
 
-    bash ${PALUDIS_HOOKER_DIR}/hooker.bash ${TOP_SRCDIR}/hooks/news.hook hook_run_sync_all_post >/dev/null ; test_return_code
-    bash ${PALUDIS_HOOKER_DIR}/hooker.bash ${TOP_SRCDIR}/hooks/news.hook hook_run_sync_all_post \
+    bash ${PALUDIS_HOOKER_DIR}/hooker.bash ${TOP_SRCDIR}/hooks/news.hook hook_run_sync_all_post 2>/dev/null ; test_return_code
+    bash ${PALUDIS_HOOKER_DIR}/hooker.bash ${TOP_SRCDIR}/hooks/news.hook hook_run_sync_all_post 2>&1 \
         | grep "No unread news items found" >/dev/null ; test_return_code
 }
 
@@ -35,8 +35,8 @@ news_one_TEST()
     export HOOK=sync_all_post
     export PALUDIS_HOME=`pwd`/news_TEST_dir/two
 
-    bash ${PALUDIS_HOOKER_DIR}/hooker.bash ${TOP_SRCDIR}/hooks/news.hook hook_run_sync_all_post >/dev/null ; test_return_code
-    bash ${PALUDIS_HOOKER_DIR}/hooker.bash ${TOP_SRCDIR}/hooks/news.hook hook_run_sync_all_post \
+    bash ${PALUDIS_HOOKER_DIR}/hooker.bash ${TOP_SRCDIR}/hooks/news.hook hook_run_sync_all_post 2>/dev/null ; test_return_code
+    bash ${PALUDIS_HOOKER_DIR}/hooker.bash ${TOP_SRCDIR}/hooks/news.hook hook_run_sync_all_post 2>&1 \
         | grep "You have 1 unread news item" >/dev/null ; test_return_code
 }
 
